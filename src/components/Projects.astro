---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import PythonIC from "./icons/Python.astro"
import Streamlit from "./icons/Streamlit.astro"
import Tensorflow from "./icons/Tensorflow.astro"
import Firebase from "./icons/Firebase.astro"
import HEIC from "./icons/HEIC.astro"
import Node from "./icons/Node.astro"
import data from "../../data.json"

const { projects, technologies } = data

// Icon mapping
const iconMap = {
  NextJS: NextJS,
  Tailwind: Tailwind,
  Streamlit: Streamlit,
  Tensorflow: Tensorflow,
  Firebase: Firebase,
  Python: PythonIC,
  HEIC: HEIC,
  Node: Node,
}

// Convert technologies object to the expected format with icons
const TAGS = Object.entries(technologies).reduce((acc, [key, tech]) => {
  acc[key] = {
    ...tech,
    icon: iconMap[tech.icon as keyof typeof iconMap]
  }
  return acc
}, {} as any)
---

<div class="flex flex-col gap-y-16">
  {
    projects.map(({ image, video, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
<div class="w-full md:w-1/2">
  <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-hidden rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
    {video ? (
      <div class="relative w-full h-56 sm:h-full">
        <img 
          src={`https://img.youtube.com/vi/${video}/maxresdefault.jpg`}
          alt="YouTube video thumbnail"
          class="object-cover object-center w-full h-full"
        />
        <div class="absolute inset-0 flex items-center justify-center">
          <button 
            class="w-16 h-16 bg-black bg-opacity-60 rounded-full flex items-center justify-center"
            onclick={`window.open('https://www.youtube.com/watch?v=${video}', '_blank')`}
          >
            <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
              <path d="M8 5v14l11-7z" />
            </svg>
          </button>
        </div>
      </div>
    ) : (
      <img 
        alt="Image for the project's preview" 
        class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" 
        loading="lazy" 
        src={image} 
      />
    )}
  </div>
</div>
  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tagKey) => {
            const tag = TAGS[tagKey]
            return (
              <li>
                <span
                  class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                >
                  <tag.icon class="size-4" />
                  {tag.name}
                </span>
              </li>
            )
          })}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



